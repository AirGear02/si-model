{"version":3,"sources":["components/sliderParameter.js","constants.js","helpers/countGraphic.js","App.js","index.js"],"names":["SliderParameter","label","onChange","defaultValue","min","max","step","useState","value","setValue","Box","display","style","alignItems","margin","marginRight","Provider","Node","formula","Slider","aria-labelledby","valueLabelDisplay","e","Input","Number","parseFloat","target","inputProps","type","h","S","I","T","tau1","tau2","tau","gamma1","gamma2","delta1","delta2","s0","i0","beta","n","DEFAULT_S0","s","index","i_val","Math","round","i_val1","i","i_val2","defaults","animation","App","setDelta1","setDelta2","setTau1","setTau2","setGamma1","setGamma2","setS0","setI0","setBeta","setTau","graphRes","setGraphRes","data","labels","datasets","fill","backgroundColor","borderColor","changeParameter","setStateFn","useEffect","_s0","_i0","_tau1","_tau2","_tau","_gamma1","_gamma2","_delta1","_delta2","_beta","t","curr_index","s_res","i_res","isNaN","push","toFixed","countGraphic","Grid","container","width","item","Container","justifyContent","textAlign","options","scaleShowLabels","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAOe,SAASA,EAAT,GAA2E,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAAO,EAC3DC,mBAASJ,GADkD,mBAC9EK,EAD8E,KACvEC,EADuE,KAErF,OACI,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,OAA3D,UACI,cAACJ,EAAA,EAAD,CAAKK,YAAY,MAAjB,SACI,cAAC,IAAQC,SAAT,UACI,cAAC,IAAQC,KAAT,CAAcC,QAASjB,QAI/B,cAACkB,EAAA,EAAD,CACIC,kBAAgB,yBAChBd,KAAMA,EACNe,kBAAkB,OAClBjB,IAAKA,EACLC,IAAKA,EACLG,MAAOA,EACPN,SAAU,SAACoB,EAAGd,GAAWC,EAASD,GAAQN,EAASM,IACnDI,MAAO,CAACG,YAAa,UAEzB,cAACQ,EAAA,EAAD,CACIf,MAAOA,EACPM,OAAO,QACPZ,SAAU,SAACoB,GAAQpB,EAASsB,OAAOC,WAAWH,EAAEI,OAAOlB,QAASC,EAASe,OAAOC,WAAWH,EAAEI,OAAOlB,SACpGmB,WAAY,CACRrB,KAAMA,EACNF,IAAKA,EACLC,IAAKA,EACLuB,KAAM,SACN,kBAAmB,qBCpChC,ICaDC,EAAI,GAGNC,EAAI,GACJC,EAAI,GACJC,EAAI,GAEJC,EDfwB,ECgBxBC,EDfwB,ECgBxBC,EDbuB,ECcvBC,EDhB0B,GCiB1BC,EDhB0B,GCiB1BC,EDtB0B,GCuB1BC,EDtB0B,GCuB1BC,ED1BsB,GC2BtBC,ED1BsB,GC2BtBC,EDnBwB,GCoBxBC,EAAIC,IAGFC,EAAI,SAACC,GACP,IAAMC,EAAQD,EAAQX,EAAMN,EAAI,EAAIE,EAAE,GAAKA,EAAEiB,KAAKC,MAAMH,EAAQX,EAAMN,IAChEqB,EAASJ,EAAQb,EAAOJ,EAAI,EAAIE,EAAE,GAAKA,EAAEiB,KAAKC,MAAMH,EAAQb,EAAOJ,IACzE,OAAQa,EAAOZ,EAAEgB,GAASC,EAAQJ,EAAIP,EAASc,EAASZ,EAASR,EAAEgB,IAGjEK,EAAI,SAACL,GAEP,IAAMC,EAAQD,EAAQX,EAAMN,EAAI,EAAIE,EAAE,GAAKA,EAAEiB,KAAKC,MAAMH,EAAQX,EAAMN,IAChEuB,EAASN,EAAQZ,EAAOL,EAAI,EAAIE,EAAE,GAAKA,EAAEiB,KAAKC,MAAMH,EAAQZ,EAAOL,IACzE,OAAOa,EAAOZ,EAAEgB,GAASC,EAAQJ,EAAIN,EAASe,EAASb,EAAST,EAAEgB,I,YCrBtEO,IAASC,WAAY,EA2JNC,MAzJf,WAAgB,IAAD,EACehD,mBFtBA,IEqBf,mBACN+B,EADM,KACEkB,EADF,OAEejD,mBFtBA,IEoBf,mBAENgC,EAFM,KAEEkB,EAFF,OAGWlD,mBFtBE,GEmBb,mBAGN0B,EAHM,KAGAyB,EAHA,OAIWnD,mBFtBE,GEkBb,mBAIN2B,EAJM,KAIAyB,EAJA,OAKepD,mBFtBA,IEiBf,mBAKN6B,EALM,KAKEwB,EALF,OAMerD,mBFtBA,IEgBf,mBAMN8B,EANM,KAMEwB,EANF,OAOOtD,mBF9BI,IEuBX,mBAONiC,EAPM,KAOFsB,EAPE,QAQOvD,mBF9BI,IEsBX,qBAQNkC,GARM,MAQFsB,GARE,SASWxD,mBFvBE,IEcb,qBASNmC,GATM,MASAsB,GATA,SAUSzD,mBFzBG,GEeZ,qBAUN4B,GAVM,MAUD8B,GAVC,SAWmB1D,mBAAS,CAAC,GAAI,GAAI,KAXrC,qBAWN2D,GAXM,MAWIC,GAXJ,MAaPC,GAAO,CACXC,OAAQH,GAAS,GACjBI,SAAU,CACR,CACErE,MAAO,cACPmE,KAAMF,GAAS,GACfK,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,2BAEf,CACExE,MAAO,WACPmE,KAAMF,GAAS,GACfK,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,6BAabC,GAAkB,SAAClE,EAAOmE,GAC9BA,EAAWnE,IASb,OANAoE,qBAAU,WAAO,IAAD,EDvBH,SAAsBC,EAAKC,EAAKC,EAAOC,EAAOC,EAAMC,EAASC,EAASC,EAASC,EAASC,GAGnGrD,EAAO8C,EACP7C,EAAO8C,EACP7C,EAAM8C,EACN3C,EAAS8C,EACT7C,EAAS8C,EACTjD,EAAS8C,EACT7C,EAAS8C,EACTxC,GATAH,EAAKqC,IACLpC,EAAKqC,GASLpC,EAAO4C,EACPxD,EAAI,CAACU,GACLT,EAAI,CAACU,GACLT,EAAI,GAIJ,IAHA,IAAIuD,EAAI,EAEJC,EAAa,EACXD,GAlDI,KAkDQ,CACdA,GAAK1D,EACL,IAAM4D,EAAQ3D,EAAE0D,GAAc3D,EAAIgB,EAAE2C,GAC9BE,EAAQ3D,EAAEyD,GAAc3D,EAAIsB,EAAEqC,GACpC,GAAGG,MAAMF,IAAUE,MAAMD,GAAQ,MACjC5D,EAAE8D,KAAKH,GACP1D,EAAE6D,KAAKF,GACP1D,EAAE4D,KAAKL,EAAEM,QAAQ,IACjBL,GAAc,EAGlB,MAAO,CAAC1D,EAAGC,EAAGC,GCLI8D,CAAatD,EAAIC,GAAIR,EAAMC,EAAMC,GAAKC,EAAQC,EAAQC,EAAQC,EAAQG,IAD1E,mBACPG,EADO,KACJM,EADI,KACDoC,EADC,KAEdpB,GAAY,CAACtB,EAAGM,EAAGoC,MAClB,CAAC/C,EAAIC,GAAIH,EAAQC,EAAQN,EAAMC,EAAME,EAAQC,EAAQF,GAAKO,KAI3D,eAACqD,EAAA,EAAD,CAAMC,WAAS,EAACpF,MAAO,CAAEqF,MAAO,QAAhC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACtF,MAAO,CAAEqF,MAAO,OAA3B,SACE,eAACE,EAAA,EAAD,WACE,eAACzF,EAAA,EAAD,CAAK0F,eAAe,OAApB,UACE,cAAC,IAAQpF,SAAT,CAAkBJ,MAAO,CAAEyF,UAAW,QAAtC,SACE,cAAC,IAAQpF,KAAT,CAAcC,QAvBb,6FAuB+BN,MAAO,CAAEyF,UAAW,YAEtD,cAAC,IAAQrF,SAAT,CAAkBJ,MAAO,CAAEyF,UAAW,QAAtC,SACE,cAAC,IAAQpF,KAAT,CAAcC,QAxBZ,0FAwB+BN,MAAO,CAAEyF,UAAW,eAGzD,cAACrG,EAAD,CACEI,IAAK,EACLC,IAAK,IACLJ,MAAO,MACPK,KAAM,EACNH,aF3Fc,GE4FdD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOsD,MAE9C,cAAC9D,EAAD,CACEI,IAAK,EACLC,IAAK,IACLJ,MAAO,MACPK,KAAM,EACNH,aFlGc,GEmGdD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOuD,OAE9C,cAAC/D,EAAD,CACEI,IAAK,EACLC,IAAK,GACLJ,MAAK,QACLK,KAAM,EACNH,aFnGe,EEoGfD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOyD,OAE9C,cAACjE,EAAD,CACEI,IAAK,EACLC,IAAK,GACLJ,MAAK,UACLK,KAAM,EACNH,aF/GgB,EEgHhBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOkD,MAE9C,cAAC1D,EAAD,CACEI,IAAK,EACLC,IAAK,GACLJ,MAAK,UACLK,KAAM,EACNH,aFtHgB,EEuHhBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOmD,MAE9C,cAAC3D,EAAD,CACEI,IAAK,EACLC,IAAK,EACLJ,MAAK,SACLK,KAAM,GACNH,aF1HgB,GE2HhBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOwD,OAE9C,cAAChE,EAAD,CACEI,IAAK,EACLC,IAAK,EACLJ,MAAK,YACLK,KAAM,GACNH,aFzIkB,GE0IlBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOgD,MAE9C,cAACxD,EAAD,CACEI,IAAK,EACLC,IAAK,EACLJ,MAAK,YACLK,KAAM,GACNH,aFhJkB,GEiJlBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOiD,MAE9C,cAACzD,EAAD,CACEI,IAAK,EACLC,IAAK,EACLJ,MAAK,UACLK,KAAM,GACNH,aFrJkB,GEsJlBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOoD,MAE9C,cAAC5D,EAAD,CACEI,IAAK,EACLC,IAAK,EACLJ,MAAK,UACLK,KAAM,GACNH,aF5JkB,GE6JlBD,SAAU,SAACM,GAAD,OAAWkE,GAAgBlE,EAAOqD,WAKlD,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACtF,MAAO,CAAEqF,MAAO,OAA3B,SACE,cAAC,IAAD,CAAM7B,KAAMA,GAAMxC,KAAM,OAAQ0E,QAAS,CAAEC,iBAAiB,WCtKpEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f403a519.chunk.js","sourcesContent":["import Slider from '@material-ui/core/Slider';\r\nimport MathJax from 'react-mathjax';\r\nimport {Box} from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nexport default function SliderParameter({label, onChange, defaultValue, min, max, step}) {\r\n    const [value, setValue] = useState(defaultValue);\r\n    return (\r\n        <Box display=\"flex\" style={{ alignItems: \"center\", margin: \"6px\"}}>\r\n            <Box marginRight=\"1em\">\r\n                <MathJax.Provider>\r\n                    <MathJax.Node formula={label} />\r\n                </MathJax.Provider>\r\n            </Box>\r\n\r\n            <Slider\r\n                aria-labelledby=\"discrete-slider-always\"\r\n                step={step}\r\n                valueLabelDisplay=\"auto\"\r\n                min={min}\r\n                max={max}\r\n                value={value}\r\n                onChange={(e, value) => {setValue(value); onChange(value)}}\r\n                style={{marginRight: \"20px\"}}\r\n            />\r\n            <Input\r\n                value={value}\r\n                margin=\"dense\"\r\n                onChange={(e) => { onChange(Number.parseFloat(e.target.value)); setValue(Number.parseFloat(e.target.value));}}\r\n                inputProps={{\r\n                    step: step,\r\n                    min: min,\r\n                    max: max,\r\n                    type: 'number',\r\n                    'aria-labelledby': 'input-slider',\r\n                }}\r\n            />\r\n        </Box>\r\n    )\r\n}","export const DEFAULT_N  = 100\r\nexport const DEFAULT_S0 = 75\r\nexport const DEFAULT_I0 = 25\r\nexport const DEFAULT_DELTA1 = 0.5;\r\nexport const DEFAULT_DELTA2 = 0.5;\r\nexport const DEFAULT_TAU1 = 4;\r\nexport const DEFAULT_TAU2 = 4;\r\nexport const DEFAULT_GAMMA1 = 0.7;\r\nexport const DEFAULT_GAMMA2 = 0.7;\r\nexport const DEFAULT_TAU = 6;\r\nexport const DEFAULT_BETA = 0.3;  ","import {\r\n    DEFAULT_DELTA1,\r\n    DEFAULT_DELTA2,\r\n    DEFAULT_GAMMA1,\r\n    DEFAULT_GAMMA2,\r\n    DEFAULT_I0,\r\n    DEFAULT_S0,\r\n    DEFAULT_TAU,\r\n    DEFAULT_TAU1,\r\n    DEFAULT_TAU2,\r\n    DEFAULT_BETA,\r\n} from '../constants';\r\n\r\nconst h = 0.1;\r\nconst t_max = 100;\r\n\r\nlet S = []\r\nlet I = []\r\nlet T = []\r\n\r\nlet tau1 = DEFAULT_TAU1;\r\nlet tau2 = DEFAULT_TAU2;\r\nlet tau = DEFAULT_TAU;\r\nlet gamma1 = DEFAULT_GAMMA1;\r\nlet gamma2 = DEFAULT_GAMMA2;\r\nlet delta1 = DEFAULT_DELTA1;\r\nlet delta2 = DEFAULT_DELTA2;\r\nlet s0 = DEFAULT_S0;\r\nlet i0 = DEFAULT_I0;\r\nlet beta = DEFAULT_BETA;\r\nlet n = DEFAULT_S0 + DEFAULT_I0;\r\n\r\n\r\nconst s = (index) => {\r\n    const i_val = index - tau / h < 0 ? I[0] : I[Math.round(index - tau / h)];\r\n    const i_val1 = index - tau1 / h < 0 ? I[0] : I[Math.round(index - tau1 / h)];\r\n    return -beta * S[index] * i_val / n + gamma1 * i_val1 - delta1 * S[index]\r\n}\r\n\r\nconst i = (index) => {\r\n   \r\n    const i_val = index - tau / h < 0 ? I[0] : I[Math.round(index - tau / h)];\r\n    const i_val2 = index - tau2 / h < 0 ? I[0] : I[Math.round(index - tau2 / h)];\r\n    return beta * S[index] * i_val / n - gamma2 * i_val2 + delta2 * S[index]\r\n}\r\n\r\nexport default function countGraphic(_s0, _i0, _tau1, _tau2, _tau, _gamma1, _gamma2, _delta1, _delta2, _beta) {\r\n    s0 = _s0;\r\n    i0 = _i0;\r\n    tau1 = _tau1;\r\n    tau2 = _tau2;\r\n    tau = _tau;\r\n    delta1 = _delta1;\r\n    delta2 = _delta2;\r\n    gamma1 = _gamma1;\r\n    gamma2 = _gamma2;\r\n    n = s0 + i0;\r\n    beta = _beta;\r\n    S = [s0]\r\n    I = [i0]\r\n    T = []\r\n    let t = 0\r\n\r\n    let curr_index = 0\r\n    while(t <= t_max) {\r\n        t += h\r\n        const s_res = S[curr_index] + h * s(curr_index)\r\n        const i_res = I[curr_index] + h * i(curr_index)\r\n        if(isNaN(s_res) || isNaN(i_res)) break;\r\n        S.push(s_res)\r\n        I.push(i_res)\r\n        T.push(t.toFixed(2))\r\n        curr_index += 1\r\n    }\r\n\r\n    return [S, I, T]\r\n}","import './App.css';\nimport { Grid, Box, Container } from '@material-ui/core';\nimport SliderParameter from './components/sliderParameter'\nimport { useEffect, useState } from 'react';\nimport MathJax from 'react-mathjax';\nimport countGraphic from './helpers/countGraphic';\nimport { Line } from 'react-chartjs-2'\nimport { defaults } from 'react-chartjs-2';\nimport {\n  DEFAULT_DELTA1,\n  DEFAULT_DELTA2,\n  DEFAULT_GAMMA1,\n  DEFAULT_GAMMA2,\n  DEFAULT_I0,\n  DEFAULT_S0,\n  DEFAULT_TAU,\n  DEFAULT_TAU1,\n  DEFAULT_TAU2,\n  DEFAULT_BETA,\n} from './constants';\n\n\ndefaults.animation = false;\n\nfunction App() {\n  const [delta1, setDelta1] = useState(DEFAULT_DELTA1);\n  const [delta2, setDelta2] = useState(DEFAULT_DELTA2);\n  const [tau1, setTau1] = useState(DEFAULT_TAU1);\n  const [tau2, setTau2] = useState(DEFAULT_TAU2);\n  const [gamma1, setGamma1] = useState(DEFAULT_GAMMA1);\n  const [gamma2, setGamma2] = useState(DEFAULT_GAMMA2);\n  const [s0, setS0] = useState(DEFAULT_S0);\n  const [i0, setI0] = useState(DEFAULT_I0);\n  const [beta, setBeta] = useState(DEFAULT_BETA);\n  const [tau, setTau] = useState(DEFAULT_TAU);\n  const [graphRes, setGraphRes] = useState([[], [], []]);\n\n  const data = {\n    labels: graphRes[2],\n    datasets: [\n      {\n        label: 'Susceptible',\n        data: graphRes[0],\n        fill: false,\n        backgroundColor: 'rgb(54, 162, 235)',\n        borderColor: 'rgba(54, 162, 235, 0.2)',\n      },\n      {\n        label: 'Infected',\n        data: graphRes[1],\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  };\n\n\n  const formula = `\\\\frac{dS}{dt} = - \\\\beta*S(t)*I(t-\\\\tau)/N + \n    \\\\chi_1*I*(t-\\\\tau_1) - \\\\delta_1*S(t)`;\n  const formula2 = `\\\\frac{dI}{dt} = \\\\beta*S(t)*I(t-\\\\tau)/N -\n    \\\\chi_2*I*(t-\\\\tau_2) + \\\\delta_2*S(t)`;\n\n\n\n  const changeParameter = (value, setStateFn) => {\n    setStateFn(value);\n  }\n\n  useEffect(() => {\n    const [s, i, t] = countGraphic(s0, i0, tau1, tau2, tau, gamma1, gamma2, delta1, delta2, beta);\n    setGraphRes([s, i, t]);\n  }, [s0, i0, delta1, delta2, tau1, tau2, gamma1, gamma2, tau, beta]);\n\n\n  return (\n    <Grid container style={{ width: \"100%\" }}>\n      <Grid item style={{ width: \"32%\" }}>\n        <Container >\n          <Box justifyContent=\"left\" >\n            <MathJax.Provider style={{ textAlign: \"left\" }}>\n              <MathJax.Node formula={formula} style={{ textAlign: \"left\" }} />\n            </MathJax.Provider>\n            <MathJax.Provider style={{ textAlign: \"left\" }}>\n              <MathJax.Node formula={formula2} style={{ textAlign: \"left\" }}/>\n            </MathJax.Provider>\n          </Box>\n          <SliderParameter\n            min={1}\n            max={100}\n            label={\"S_0\"}\n            step={1}\n            defaultValue={DEFAULT_S0}\n            onChange={(value) => changeParameter(value, setS0)}\n          />\n          <SliderParameter\n            min={0}\n            max={100}\n            label={\"I_0\"}\n            step={1}\n            defaultValue={DEFAULT_I0}\n            onChange={(value) => changeParameter(value, setI0)}\n          />\n          <SliderParameter\n            min={0}\n            max={20}\n            label={`\\\\tau`}\n            step={1}\n            defaultValue={DEFAULT_TAU}\n            onChange={(value) => changeParameter(value, setTau)}\n          />\n          <SliderParameter\n            min={0}\n            max={20}\n            label={`\\\\tau_1`}\n            step={1}\n            defaultValue={DEFAULT_TAU1}\n            onChange={(value) => changeParameter(value, setTau1)}\n          />\n          <SliderParameter\n            min={0}\n            max={20}\n            label={`\\\\tau_2`}\n            step={1}\n            defaultValue={DEFAULT_TAU2}\n            onChange={(value) => changeParameter(value, setTau2)}\n          />\n          <SliderParameter\n            min={0}\n            max={2}\n            label={`\\\\beta`}\n            step={0.1}\n            defaultValue={DEFAULT_BETA}\n            onChange={(value) => changeParameter(value, setBeta)}\n          />\n          <SliderParameter\n            min={0}\n            max={2}\n            label={`\\\\delta_1`}\n            step={0.1}\n            defaultValue={DEFAULT_DELTA1}\n            onChange={(value) => changeParameter(value, setDelta1)}\n          />\n          <SliderParameter\n            min={0}\n            max={2}\n            label={`\\\\delta_2`}\n            step={0.1}\n            defaultValue={DEFAULT_DELTA2}\n            onChange={(value) => changeParameter(value, setDelta2)}\n          />\n          <SliderParameter\n            min={0}\n            max={2}\n            label={`\\\\chi_1`}\n            step={0.1}\n            defaultValue={DEFAULT_GAMMA1}\n            onChange={(value) => changeParameter(value, setGamma1)}\n          />\n          <SliderParameter\n            min={0}\n            max={2}\n            label={`\\\\chi_2`}\n            step={0.1}\n            defaultValue={DEFAULT_GAMMA2}\n            onChange={(value) => changeParameter(value, setGamma2)}\n          />\n        </Container>\n\n      </Grid>\n      <Grid item style={{ width: \"68%\" }}>\n        <Line data={data} type={'line'} options={{ scaleShowLabels: false }} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}